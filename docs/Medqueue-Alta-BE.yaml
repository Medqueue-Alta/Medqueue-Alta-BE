openapi: 3.0.0
info:
  description: |
    Open API untuk aplikasi sosial media 
    tampilan agar mudah di pahami.
  version: "1.0.0"
  title: Open APi Sosial Media
  contact:
    name: "MedQueue"
    email: "mn.fawwaz99@gmail.com"
    url: "https://app.swaggerhub.com/apis/MNFAWWAZ99/Sosial_Media/1.0.0"
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MNFAWWAZ99/MedQueue/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MNFAWWAZ99/Sosial_Media/1.0.0
  - url: "https://petstore.swagger.io/v2"
tags:
  - name: pasien
    description: Operations related to patients
  - name: faskes
    description: Operations related to healthcare facilities
paths:
  /register:
    post:
      tags:
        - pasien
      description: "Register user"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
            example:
              nama: "Joko Susilo"
              email: "joko123@gmail.com"
              tempat_lahir: "Jakarta"
              tgl_lahir: "1990-01-01"
              no_bpjs: "1234567890"
              no_nik: "1234567890123456"
              gol_darah: "A"
              no_telepon: "08123456789"
      responses:
        "201":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: "User registered successfully"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 400
                message: "Bad request"
        "500":
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 500
                message: "Server error occurred"
  /login:
    post:
      tags:
        - pasien
      summary: "Login user"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              email: "joko123@gmail.com"
              password: "12345678"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: "Login successful"
                data:
                  nama: "Joko Susilo"
                  email: "joko123@gmail.com"
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 400
                message: "Bad request"
        "500":
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 500
                message: "Server error occurred"
  /reservasi:
    post:
      tags:
        - pasien
      summary: "Make appointment and provide medical complaint"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Reservasi"
            example:
              tanggal: "2024-03-30"
              keluhan: "Sakit kepala"
      responses:
        "201":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: "Appointment made successfully"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 400
                message: "Bad request"
        "500":
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 500
                message: "Server error occurred"
  /get_antrian:
    get:
      tags:
        - pasien
      summary: "Get current queue status"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: "Queue status retrieved successfully"
                data:
                  nomor_antrian: 7
                  waktu_tersisa: "00:45:00"
        "500":
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 500
                message: "Server error occurred"
  /notifikasi_antrian:
    post:
      tags:
        - pasien
      summary: "Subscribe to queue notifications"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: "Successfully subscribed to queue notifications"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 400
                message: "Bad request"
        "500":
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 500
                message: "Server error occurred"
  /set_jadwal:
    post:
      tags:
        - faskes
      summary: "Set schedule and quota for healthcare facility"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Jadwal"
            example:
              tanggal: "2024-04-01"
              kuota:
                kuota: 50
      responses:
        "201":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: "Schedufully"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 400
                message: "Bad request"
        "500":
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 500
                message: "Server error occurred"
  /data_pasien_berkunjung:
    get:
      tags:
        - faskes
      summary: "Get data of patients who visited the healthcare facility"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: "Patient data retrieved successfully"
                data:
                  - nama: "John Doe"
                    tanggal_kunjungan: "2024-03-30"
                  - nama: "Jane Smith"
                    tanggal_kunjungan: "2024-03-30"
        "500":
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 500
                message: "Server error occurred"
  /check_in:
    post:
      tags:
        - faskes
      summary: "Check in a patient and skip the queue"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckIn"
      responses:
        "201":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: "Checked in successfully"
        "400":
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 400
                message: "Bad request"
        "500":
          description: "Server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 500
                message: "Server error occurred"

components:
  schemas:
    User:
      type: object
      required:
        - nama
        - email
        - tempat_lahir
        - tgl_lahir
        - no_bpjs
        - no_nik
        - gol_darah
        - no_telepon
      properties:
        nama:
          type: string
        email:
          type: string
        tempat_lahir:
          type: string
        tgl_lahir:
          type: string
          format: date
        no_bpjs:
          type: string
        no_nik:
          type: string
        gol_darah:
          type: string
        no_telepon:
          type: string
    Reservasi:
      type: object
      required:
        - tanggal
        - keluhan
      properties:
        tanggal:
          type: string
          format: date
        keluhan:
          type: string
    Jadwal:
      type: object
      required:
        - tanggal
        - kuota
      properties:
        tanggal:
          type: string
          format: date
        kuota:
          type: integer
    CheckIn:
      type: object
      required:
        - pasien_id
      properties:
        pasien_id:
          type: integer
    ApiResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    ApiDataResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        data:
          type: object
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
